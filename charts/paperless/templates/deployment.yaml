apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "paperless.fullname" . }}
  labels:
    {{- include "paperless.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end}}
  selector:
    matchLabels:
      {{- include "paperless.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "paperless.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "paperless.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.volumes }}
          volumeMounts:
            - name: tmpfs
              mountPath: /tmp
            {{- range .Values.volumes }}
            - name: {{ .name | quote }}
              mountPath: {{ .mountPath | quote }}
            {{- end }}
          {{- end }}
          env:
            {{- range $key, $value := .Values.paperless.extaEnv }}
            - name: {{ $key | upper | replace "_" "__" | replace "-" "__" }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.securityContext.runAsUser }}
            - name: USERMAP_UID
              value: {{ .Values.securityContext.runAsUser | quote }}
            {{- end }}
            {{- if .Values.securityContext.runAsGroup }}
            - name: USERMAP_GID
              value: {{ .Values.securityContext.runAsGroup | quote }}
            {{- end }}
            - name: PAPERLESS_URL
              value: {{ .Values.paperless.url | quote }}
            - name: PAPERLESS_TIME_ZONE
              value: {{ .Values.TZ | quote }}
            - name: PAPERLESS_OCR_LANGUAGE
              value: {{ .Values.paperless.ocrLanguage | quote }}
            - name: PAPERLESS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.paperless.existingSecret.name }}
                  key: {{ .Values.paperless.existingSecret.secretKey }}
            - name: PAPERLESS_PORT
              value: {{ .Values.paperless.port | quote }}
            {{- if .Values.paperless.existingSecret.redisPasswordKey }}
            - name: IGNORE_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.paperless.existingSecret.name }}
                  key: {{ .Values.paperless.existingSecret.redisPasswordKey }}
            - name: PAPERLESS_REDIS
              value: redis://:$(IGNORE_REDIS_PASSWORD)@{{ .Values.paperless.redisHost }}
            {{- else }}
            - name: PAPERLESS_REDIS
              value: redis://{{ .Values.paperless.redisHost }}
            {{- end }}
            - name: PAPERLESS_DBENGINE
              value: postgresql
            - name: PAPERLESS_DBHOST
              value: {{ .Values.paperless.dbHost }}
            - name: PAPERLESS_DBPORT
              value: {{ .Values.paperless.dbPort | quote }}
            - name: PAPERLESS_DBNAME
              value: {{ .Values.paperless.dbName }}
            - name: PAPERLESS_DBUSER
              value: {{ .Values.paperless.dbUser }}
            - name: PAPERLESS_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.paperless.existingSecret.name }}
                  key: {{ .Values.paperless.existingSecret.adminUsernameKey }}
            - name: PAPERLESS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.paperless.existingSecret.name }}
                  key: {{ .Values.paperless.existingSecret.adminPasswordKey }}
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.paperless.existingSecret.name }}
                  key: {{ .Values.paperless.existingSecret.dbPasswordKey }}
      {{- if .Values.volumes }}
      volumes:
        - name: tmpfs
          emptyDir: {}
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- if .claimName }}
          persistentVolumeClaim:
            claimName: {{ .claimName }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
      {{- else }}
      volumes:
        - name: tmpfs
          emptyDir: 
            medium: Memory
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
